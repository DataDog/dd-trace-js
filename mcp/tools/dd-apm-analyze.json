{
    "name": "dd_apm_analyze",
    "description": "Analyze Node.js packages to identify APM instrumentation targets and generate comprehensive analysis reports. Supports LLM enhancement, multi-version analysis, and subcategory detection for optimal integration development.",
    "inputSchema": {
        "type": "object",
        "properties": {
            "package": {
                "type": "string",
                "description": "Package name with optional version specifier (e.g., 'axios', 'redis@^4.0.0', 'express@4.18.0')"
            },
            "output_path": {
                "type": "string",
                "description": "Path to save the JSON analysis report. If not provided, results are printed to stdout."
            },
            "min_score": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "default": 0,
                "description": "Minimum confidence score threshold (0.0-1.0). Higher values return fewer, higher-confidence targets."
            },
            "max_per_export": {
                "type": "number",
                "minimum": 1,
                "default": 20,
                "description": "Maximum number of targets per export group to prevent overwhelming results."
            },
            "max_total": {
                "type": "number",
                "minimum": 1,
                "default": 200,
                "description": "Maximum total number of targets to include in the analysis."
            },
            "enhance": {
                "type": "boolean",
                "default": false,
                "description": "Enable LLM enhancement for empty fields with code verification. Requires DD_AI_GATEWAY or OPENAI_API_KEY."
            },
            "multi_version": {
                "type": "boolean",
                "default": false,
                "description": "Analyze multiple versions (2 years back to current major) to detect API differences and breaking changes."
            },
            "llm_judge": {
                "type": "boolean",
                "default": false,
                "description": "Enable LLM-based target pruning and quality assessment."
            },
            "interactive": {
                "type": "boolean",
                "default": true,
                "description": "Enable interactive prompts for category selection when LLM is uncertain. Set false for automated environments."
            },
            "assist": {
                "type": "boolean",
                "default": false,
                "description": "Run LLM assistant after analysis to provide integration advice and include notes in the report."
            },
            "data_scoring": {
                "type": "boolean",
                "default": true,
                "description": "Enable data requirements scoring to prioritize functions based on their ability to provide meaningful span data (URL, method, database queries, etc.). Uses category-specific data requirements to score targets."
            }
        },
        "required": [
            "package"
        ]
    },
    "outputSchema": {
        "type": "object",
        "properties": {
            "success": {
                "type": "boolean",
                "description": "Whether the analysis completed successfully"
            },
            "report_path": {
                "type": "string",
                "description": "Path to the generated analysis report (if output_path was specified)"
            },
            "library_name": {
                "type": "string",
                "description": "Analyzed library name"
            },
            "category": {
                "type": "string",
                "enum": [
                    "http",
                    "database",
                    "messaging",
                    "cache",
                    "web",
                    "other"
                ],
                "description": "Detected integration category"
            },
            "subcategory": {
                "type": "string",
                "enum": [
                    "client",
                    "server",
                    "producer",
                    "consumer"
                ],
                "description": "Detected integration subcategory for more specific patterns"
            },
            "target_count": {
                "type": "number",
                "description": "Number of instrumentation targets identified"
            },
            "confidence_range": {
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number"
                    },
                    "max": {
                        "type": "number"
                    },
                    "avg": {
                        "type": "number"
                    }
                },
                "description": "Confidence score statistics for identified targets"
            },
            "data_scoring_enabled": {
                "type": "boolean",
                "description": "Whether data requirements scoring was applied to targets"
            },
            "data_score_range": {
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number"
                    },
                    "max": {
                        "type": "number"
                    },
                    "avg": {
                        "type": "number"
                    }
                },
                "description": "Data availability score statistics (when data scoring enabled)"
            }
        }
    },
    "examples": [
        {
            "description": "Basic package analysis",
            "input": {
                "package": "axios",
                "output_path": "axios-analysis.json"
            },
            "output": {
                "success": true,
                "report_path": "axios-analysis.json",
                "library_name": "axios",
                "category": "http",
                "subcategory": "client",
                "target_count": 4,
                "confidence_range": {
                    "min": 0.57,
                    "max": 0.98,
                    "avg": 0.82
                }
            }
        },
        {
            "description": "Enhanced analysis with LLM assistance and data scoring",
            "input": {
                "package": "redis",
                "enhance": true,
                "assist": true,
                "data_scoring": true,
                "min_score": 0.7,
                "output_path": "redis-enhanced.json"
            },
            "output": {
                "success": true,
                "report_path": "redis-enhanced.json",
                "library_name": "redis",
                "category": "cache",
                "subcategory": "client",
                "target_count": 8,
                "confidence_range": {
                    "min": 0.72,
                    "max": 0.95,
                    "avg": 0.84
                },
                "data_scoring_enabled": true,
                "data_score_range": {
                    "min": 0.6,
                    "max": 0.9,
                    "avg": 0.75
                }
            }
        }
    ],
    "environment": {
        "variables": {
            "DD_AI_GATEWAY": {
                "description": "Python AI gateway URL for LLM services",
                "required": false
            },
            "OPENAI_API_KEY": {
                "description": "OpenAI API key for direct LLM access",
                "required": false
            },
            "DD_DEBUG_DOCS": {
                "description": "Enable debug logging for documentation processing",
                "required": false
            }
        },
        "requirements": {
            "node": ">=14.0.0",
            "python": ">=3.8",
            "network": "Internet access required for NPM registry and LLM services"
        }
    },
    "performance": {
        "typical_duration": "30-120 seconds",
        "factors": [
            "Package size",
            "LLM usage",
            "Multi-version analysis",
            "Network latency"
        ]
    }
}