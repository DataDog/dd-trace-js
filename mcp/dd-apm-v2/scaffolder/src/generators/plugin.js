'use strict'

/**
 * Plugin Generator - Creates plugin package structure
 *
 * Purpose: Generate basic plugin files and package.json
 * Output: Clean plugin structure without complex logic
 */

function generatePlugin (analysis, integrationName) {
  const packageName = analysis.package.name
  const pluginDir = `packages/datadog-plugin-${integrationName}`

  return {
    [`${pluginDir}/package.json`]: generatePackageJson(integrationName, packageName),
    [`${pluginDir}/src/index.js`]: generatePluginIndex(integrationName, packageName),
    [`${pluginDir}/README.md`]: generatePluginReadme(integrationName, packageName)
  }
}

function generatePackageJson (integrationName, packageName) {
  return JSON.stringify({
    name: `datadog-plugin-${integrationName}`,
    version: '5.0.0',
    description: `Datadog APM tracing plugin for ${packageName}`,
    main: 'src/index.js',
    scripts: {
      test: 'tap test/*.js'
    },
    keywords: ['datadog', 'tracing', 'apm', integrationName],
    author: 'Datadog',
    license: 'BSD-3-Clause'
  }, null, 2)
}

function generatePluginIndex (integrationName, packageName) {
  return `'use strict'

/**
 * ${packageName} tracing plugin
 * 
 * This plugin provides APM tracing for ${packageName} operations.
 * Generated by dd-apm-scaffolder-v2
 */

const TracingPlugin = require('../../dd-trace/src/plugins/tracing')

class ${capitalize(integrationName)}Plugin extends TracingPlugin {
  static get id() {
    return '${integrationName}'
  }

  static get operation() {
    return 'request'
  }

  // TODO: Implement plugin-specific tracing logic
  // TODO: Add span creation and tagging
  // TODO: Handle errors and edge cases
}

module.exports = ${capitalize(integrationName)}Plugin

function capitalize(str) {
  return str.split('-').map(part => 
    part.charAt(0).toUpperCase() + part.slice(1)
  ).join('')
}`
}

function generatePluginReadme (integrationName, packageName) {
  return `# Datadog ${packageName} Plugin

This plugin provides APM tracing for ${packageName}.

## Usage

Tracing is automatically enabled when using \`dd-trace\`:

\`\`\`javascript
const tracer = require('dd-trace').init()
const ${integrationName.replace(/-/g, '')} = require('${packageName}')

// Your ${packageName} operations will be automatically traced
\`\`\`

## Configuration

\`\`\`javascript
const tracer = require('dd-trace').init({
  plugins: {
    '${integrationName}': {
      enabled: true,
      service: 'my-${integrationName}-service'
    }
  }
})
\`\`\`

## TODO

- [ ] Implement span creation
- [ ] Add operation-specific tags
- [ ] Handle error scenarios
- [ ] Add configuration options
- [ ] Write comprehensive tests
`
}

function capitalize (str) {
  return str.split('-').map(part =>
    part.charAt(0).toUpperCase() + part.slice(1)
  ).join('')
}

module.exports = { generatePlugin }
