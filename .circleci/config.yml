version: 2
docker-base: &docker-base
  docker:
    - image: node:8
    - &postgres
      image: postgres:9.5
    - &mysql
      image: mysql:5.7
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD=yes
        - MYSQL_DATABASE=db
    - &redis
      image: redis:4.0-alpine
    - &mongo
      image: mongo:3.6
    - &elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
      environment:
        - discovery.type=single-node
        - "ES_JAVA_OPTS=-Xms64m -Xmx64m"
    - &rabbitmq
      image: rabbitmq:3.6-alpine
build-node-base: &node-base
  <<: *docker-base
  working_directory: ~/dd-trace-js
  steps:
    - checkout
    - run:
        name: Versions
        command: yarn versions
    - &restore-yarn-cache
      restore_cache:
        key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
    - run:
        name: Install dependencies
        command: yarn install
    - &save-yarn-cache
      save_cache:
        key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
        paths:
          - ./node_modules
          - ./yarn.lock
    - run:
        name: Test
        command: yarn test
    - run:
        name: Benchmark
        command: yarn bench
jobs:
  lint:
    docker:
      - image: node
    working_directory: ~/dd-trace-js
    steps:
      - checkout
      - run:
          name: Versions
          command: yarn versions
      - *restore-yarn-cache
      - run:
          name: Install dependencies
          command: yarn install
      - *save-yarn-cache
      - run:
          name: Lint
          command: yarn lint
  test-memory-leaks:
    <<: *docker-base
    working_directory: ~/dd-trace-js
    steps:
      - checkout
      - run:
          name: Versions
          command: yarn versions
      - *restore-yarn-cache
      - run:
          name: Install dependencies
          command: yarn install
      - *save-yarn-cache
      - run:
          name: Test
          command: yarn leak
  build-node-4:
    <<: *node-base
    docker:
      - image: node:4
      - *postgres
      - *mysql
      - *redis
      - *mongo
      - *elasticsearch
      - *rabbitmq
  build-node-6:
    <<: *node-base
    docker:
      - image: node:6
      - *postgres
      - *mysql
      - *redis
      - *mongo
      - *elasticsearch
      - *rabbitmq
  build-node-8:
    <<: *node-base
    docker:
      - image: node:8
      - *postgres
      - *mysql
      - *redis
      - *mongo
      - *elasticsearch
      - *rabbitmq
  build-node-latest:
    <<: *node-base
    docker:
      - image: node
      - *postgres
      - *mysql
      - *redis
      - *mongo
      - *elasticsearch
      - *rabbitmq

workflows:
  version: 2
  build:
    jobs:
      - lint
      - test-memory-leaks
      - build-node-4
      - build-node-6
      - build-node-8
      - build-node-latest
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-node-4
      - build-node-6
      - build-node-8
      - build-node-latest
