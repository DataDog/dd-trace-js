version: 2

node-core-base: &node-core-base
  docker:
    - image: node:8
  working_directory: ~/dd-trace-js
  resource_class: small
  steps:
    - checkout
    - run:
        name: Versions
        command: yarn versions
    - &restore-yarn-cache
      restore_cache:
        key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
    - run:
        name: Install dependencies
        command: yarn install
    - &save-yarn-cache
      save_cache:
        key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
        paths:
          - ./node_modules
          - ./yarn.lock
    - run:
        name: Unit tests
        command: yarn test:core
    - run:
        name: Benchmark
        command: yarn bench

node-plugin-base: &node-plugin-base
  docker:
    - image: node:8
  working_directory: ~/dd-trace-js
  resource_class: small
  steps:
    - checkout
    - run:
        name: Versions
        command: yarn versions
    - &restore-yarn-cache
      restore_cache:
        key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
    - run:
        name: Install dependencies
        command: yarn install
    - &save-yarn-cache
      save_cache:
        key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
        paths:
          - ./node_modules
          - ./yarn.lock
    - run:
        name: Unit tests
        command: yarn test:plugins
    - run:
        name: Memory leak tests
        command: yarn leak:plugins

jobs:
  # Linting

  lint:
    docker:
      - image: node
    working_directory: ~/dd-trace-js
    resource_class: small
    steps:
      - checkout
      - run:
          name: Versions
          command: yarn versions
      - *restore-yarn-cache
      - run:
          name: Install dependencies
          command: yarn install
      - *save-yarn-cache
      - run:
          name: Lint
          command: yarn lint

  # Core tests

  node-core-4:
    <<: *node-core-base
    docker:
      - image: node:4

  node-core-6:
    <<: *node-core-base
    docker:
      - image: node:6

  node-core-8:
    <<: *node-core-base
    docker:
      - image: node:8

  node-core-latest:
    <<: *node-core-base
    docker:
      - image: node

  node-leaks:
    docker:
      - image: node:8
    working_directory: ~/dd-trace-js
    resource_class: small
    steps:
      - checkout
      - run:
          name: Versions
          command: yarn versions
      - *restore-yarn-cache
      - run:
          name: Install dependencies
          command: yarn install
      - *save-yarn-cache
      - run:
          name: Memory leak tests
          command: yarn leak:core

  # Plugin tests

  node-amqplib:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=rabbitmq
          - PLUGINS=amqplib
      - image: rabbitmq:3.6-alpine

  node-amqp10:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=qpid
          - PLUGINS=amqp10
      - image: scholzj/qpid-cpp:1.38.0
        command: -p 5673
        environment:
          - QPIDD_ADMIN_USERNAME=admin
          - QPIDD_ADMIN_PASSWORD=admin

  node-elasticsearch:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=elasticsearch
          - PLUGINS=elasticsearch
      - image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
        environment:
          - discovery.type=single-node
          - "ES_JAVA_OPTS=-Xms64m -Xmx64m"

  node-graphql:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=
          - PLUGINS=graphql

  node-http:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=
          - PLUGINS=http

  node-memcached:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=memcached
          - PLUGINS=memcached
      - image: memcached:1.5-alpine

  node-mysql:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=mysql
          - PLUGINS=mysql|mysql2
      - image: mysql:5.7
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD=yes
          - MYSQL_DATABASE=db

  node-mongo:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=mongo
          - PLUGINS=mongodb-core
      - image: mongo:3.6

  node-postgres:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=postgres
          - PLUGINS=pg
      - image: postgres:9.5

  node-redis:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=redis
          - PLUGINS=redis|ioredis
      - image: redis:4.0-alpine

  node-web:
    <<: *node-plugin-base
    docker:
      - image: node:8
        environment:
          - SERVICES=
          - PLUGINS=express|hapi|koa|restify

workflows:
  version: 2
  build:
    jobs:
      - lint
      - node-leaks
      - node-core-4
      - node-core-6
      - node-core-8
      - node-core-latest
      - node-amqplib
      - node-amqp10
      - node-elasticsearch
      - node-graphql
      - node-http
      - node-memcached
      - node-mongo
      - node-mysql
      - node-postgres
      - node-redis
      - node-web
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - node-core-4
      - node-core-6
      - node-core-8
      - node-core-latest
      - node-amqplib
      - node-amqp10
      - node-elasticsearch
      - node-graphql
      - node-http
      - node-memcached
      - node-mongo
      - node-mysql
      - node-postgres
      - node-redis
      - node-web
