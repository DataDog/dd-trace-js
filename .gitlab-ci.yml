stages:
  - package
  - deploy
  - benchmarks
  - benchmarks-pr-comment

include:
  - remote: https://gitlab-templates.ddbuild.io/apm/packaging.yml
  - local: ".gitlab/benchmarks.yml"

variables:
  JS_PACKAGE_VERSION:
    description: "Version to build for .deb and .rpm. Must be already published in NPM"
  DOWNSTREAM_BRANCH:
    value: "master"
    description: "Run a specific datadog-reliability-env branch downstream"

.common: &common
  tags: [ "runner:main", "size:large" ]

package:
  extends: .package
  rules:
  - if: $JS_PACKAGE_VERSION
    when: on_success
  - if: '$CI_COMMIT_TAG =~ /^v.*/'
    when: on_success
  script:
    - ../.gitlab/build-deb-rpm.sh
    - find . -iregex '.*\.\(deb\|rpm\)' -printf '%f\0' | xargs -0 dd-pkg lint

package-arm:
  extends: .package-arm
  rules:
  - if: $JS_PACKAGE_VERSION
    when: on_success
  - if: '$CI_COMMIT_TAG =~ /^v.*/'
    when: on_success
  script:
    - ../.gitlab/build-deb-rpm.sh
    - find . -iregex '.*\.\(deb\|rpm\)' -printf '%f\0' | xargs -0 dd-pkg lint

.release-package:
  stage: deploy
  variables:
    PRODUCT_NAME: auto_inject-node
    PACKAGE_FILTER: js # product name is "node" but package name ends "js"

deploy_to_reliability_env:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: on_success
    - when: manual
      allow_failure: true
  trigger:
    project: DataDog/apm-reliability/datadog-reliability-env
    branch: $DOWNSTREAM_BRANCH
  variables:
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA

deploy_to_docker_registries:
  stage: deploy
  needs: []
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v.*/ || $CI_COMMIT_TAG == "dev"'
      when: on_success
    - when: manual
      allow_failure: true
  trigger:
    project: DataDog/public-images
    branch: main
    strategy: depend
  variables:
    IMG_SOURCES: ghcr.io/datadog/dd-trace-js/dd-lib-js-init:$CI_COMMIT_TAG
    IMG_DESTINATIONS: dd-lib-js-init:$CI_COMMIT_TAG
    IMG_SIGNING: "false"
    RETRY_COUNT: 5
    RETRY_DELAY: 300

deploy_latest_to_docker_registries:
  stage: deploy
  needs: []
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v.*/'
      when: on_success
    - when: manual
      allow_failure: true
  trigger:
    project: DataDog/public-images
    branch: main
    strategy: depend
  variables:
    IMG_SOURCES: ghcr.io/datadog/dd-trace-js/dd-lib-js-init:$CI_COMMIT_TAG
    IMG_DESTINATIONS: dd-lib-js-init:latest
    IMG_SIGNING: "false"
    RETRY_COUNT: 5
    RETRY_DELAY: 300
