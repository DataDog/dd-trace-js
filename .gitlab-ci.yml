stages:
  - shared-pipeline
  - benchmarks
  - benchmarks-pr-comment
  - single-step-instrumentation-tests
  - macrobenchmarks

# CI checks for Config Inversion
check_config_inversion_local_file:
  extends: .check_config_inversion_local_file
  variables:
    LOCAL_JSON_PATH: "packages/dd-trace/src/supported-configurations.json"

config_inversion_update_central:
  extends: .config_inversion_update_central
  variables:
    LOCAL_REPO_NAME: "dd-trace-js"
    LOCAL_JSON_PATH: "packages/dd-trace/src/supported-configurations.json"

include:
  # See: https://gitlab.ddbuild.io/DataDog/apm-reliability/libdatadog-build
  - remote: https://gitlab-templates.ddbuild.io/libdatadog/include-wip/mhlidd/config-inversion-update-central/one-pipeline.yml
  - local: ".gitlab/benchmarks.yml"
  - local: ".gitlab/macrobenchmarks.yml"

workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?[0-9]+\.[0-9]+\.[0-9]+$/
      variables:
        DANGEROUSLY_SKIP_SHARED_PIPELINE_TESTS: "true"
    - when: always

variables:
  # dd-trace-js has some exceptions to the default names
  AGENT_REPO_PRODUCT_NAME: auto_inject-node
  SYSTEM_TESTS_LIBRARY: nodejs
  REPO_NOTIFICATION_CHANNEL: "#notifications-apm-js"

configure_system_tests:
  variables:
    SYSTEM_TESTS_SCENARIOS_GROUPS: "simple_onboarding,simple_onboarding_profiling,docker-ssi,lib-injection"

requirements_json_test:
  rules:
    - when: on_success
  variables:
    REQUIREMENTS_BLOCK_JSON_PATH: ".gitlab/requirements_block.json"
    REQUIREMENTS_ALLOW_JSON_PATH: ".gitlab/requirements_allow.json"

