stages:
  - package
  - deploy
  - benchmarks
  - benchmarks-pr-comment
  - single-step-instrumentation-tests
  - manual_images

include:
  - remote: https://gitlab-templates.ddbuild.io/apm/packaging.yml
  - local: ".gitlab/benchmarks.yml"
  - local: ".gitlab/single-step-instrumentation-tests.yml"

variables:
  DOCKER_REGISTRY: registry.ddbuild.io
  CI_DOCKER_IMAGE_BASE: $DOCKER_REGISTRY/ci/dd-trace-js
  PROMOTION_TAG: current
  JS_PACKAGE_VERSION:
    description: "Version to build for .deb and .rpm. Must be already published in NPM"
  DOWNSTREAM_BRANCH:
    value: "master"
    description: "Run a specific datadog-reliability-env branch downstream"

.common: &common
  tags: [ "runner:main", "size:large" ]

build-gitlab-image:
  stage: manual_images
  rules:
    #- if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push"
    #  changes:
    #    - gitlab/Dockerfile.*
    - when: manual
      allow_failure: true
  tags: [ "arch:amd64" ]
  image: $DOCKER_REGISTRY/docker:20.10.13
  script:
    - >
      docker buildx build 
      --tag $CI_DOCKER_IMAGE_BASE/gitlab:current
      --platform linux/amd64
      --push
      --file ci/gitlab/Dockerfile.gitlab
      .


package_snapshot:
  #image: docker:git
  #extends: .common
  extends: .package
  tags: ["arch:amd64"]
  #image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/benchmarking-platform:dd-trace-js
  image: registry.ddbuild.io/ci/dd-trace-js/gitlab:current
  #tags: ["runner:apm-k8s-tweaked-metal"]
  #image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/test-infra-definitions/runner:a58cc31c
  #image: registry.ddbuild.io/images/docker:24.0.4-gbi-focal
  #image: registry.ddbuild.io/images/bazel:6-gbi

  #image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:20.10.13
  #tags: ["arch:amd64"]

  stage: package
  rules:
    - if: $JS_PACKAGE_VERSION
      when: never
    - if: '$CI_COMMIT_TAG =~ /^v.*/'
      when: never
    - if: $CI_COMMIT_BRANCH == 'robertomonteromiguel/add_onboarding_tests'
      when: on_success
      allow_failure: true
    - when: manual
      allow_failure: true
  script:
   - |
      CI_VERSION_SUFFIX="~pipeline.${CI_PIPELINE_ID}.beta.${CI_COMMIT_SHORT_SHA}"
      cd ..
      echo "Where am I?"
      pwd
      verdaccio &
      sleep 5
      npm install -g npm-cli-adduser
      npm-cli-adduser -u test -p test -e email@email.com -r http://localhost:4873
      yarn install
      content=`cat ./package.json | tr '\n' ' '`
      current_version=$(jq '.version' <<< "$content" )
      current_version=$(echo "$current_version" | tr -d '"')
      current_version+="$CI_VERSION_SUFFIX"
      current_version="4.0.0.beta.1"
      npm version --no-git-tag-version $current_version
      npm publish --tag dev --registry http://localhost:4873
      echo "Finish"
      export JS_PACKAGE_VERSION=$current_version
      cd packaging
      ../.gitlab/build-deb-rpm.sh
  
      echo "done"
 
  artifacts:
    reports:
      dotenv: package_version.env

package:
  extends: .package
  rules:
  - if: $JS_PACKAGE_VERSION
    when: on_success
  - if: '$CI_COMMIT_TAG =~ /^v.*/'
    when: on_success
  script:
    - ../.gitlab/build-deb-rpm.sh

package-arm:
  extends: .package-arm
  rules:
  - if: $JS_PACKAGE_VERSION
    when: on_success
  - if: '$CI_COMMIT_TAG =~ /^v.*/'
    when: on_success
  script:
    - ../.gitlab/build-deb-rpm.sh

.release-package:
  stage: deploy
  variables:
    PRODUCT_NAME: auto_inject-node
    PACKAGE_FILTER: js # product name is "node" but package name ends "js"

deploy_to_reliability_env:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: on_success
    - when: manual
      allow_failure: true
  trigger:
    project: DataDog/apm-reliability/datadog-reliability-env
    branch: $DOWNSTREAM_BRANCH
  variables:
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA

deploy_to_docker_registries:
  stage: deploy
  needs: []
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v.*/ || $CI_COMMIT_TAG == "dev"'
      when: on_success
    - when: manual
      allow_failure: true
  trigger:
    project: DataDog/public-images
    branch: main
    strategy: depend
  variables:
    IMG_SOURCES: ghcr.io/datadog/dd-trace-js/dd-lib-js-init:$CI_COMMIT_TAG
    IMG_DESTINATIONS: dd-lib-js-init:$CI_COMMIT_TAG
    IMG_SIGNING: "false"
    RETRY_COUNT: 5
    RETRY_DELAY: 300

deploy_latest_to_docker_registries:
  stage: deploy
  needs: []
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v.*/'
      when: on_success
    - when: manual
      allow_failure: true
  trigger:
    project: DataDog/public-images
    branch: main
    strategy: depend
  variables:
    IMG_SOURCES: ghcr.io/datadog/dd-trace-js/dd-lib-js-init:$CI_COMMIT_TAG
    IMG_DESTINATIONS: dd-lib-js-init:latest
    IMG_SIGNING: "false"
    RETRY_COUNT: 5
    RETRY_DELAY: 300
