name: AppSec

on:
  pull_request:
  push:
    branches: [master]
  schedule:
    - cron: '0 4 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2      
      - name: Set hostname
        run: sudo hostnamectl set-hostname testrunner
      - run: docker-compose up -d testagent # Start the testagent container in the background
      - uses: ./.github/actions/node/setup
      - run: yarn install
      - run: yarn test:appsec:ci
      - if: success() || failure()
        run: docker-compose logs testagent # Display the log output of the testagent container
      - uses: codecov/codecov-action@v2

  ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2      
      - name: Set hostname
        run: sudo hostnamectl set-hostname testrunner
      - run: docker-compose up -d testagent # Start the testagent container in the background
      - uses: ./.github/actions/node/setup
      - run: yarn install
      - uses: ./.github/actions/node/14
      - run: yarn test:appsec:ci
      - uses: ./.github/actions/node/16
      - run: yarn test:appsec:ci
      - uses: ./.github/actions/node/18
      - run: yarn test:appsec:ci
      - uses: ./.github/actions/node/latest
      - run: yarn test:appsec:ci
      - if: success() || failure()
        run: docker-compose logs testagent # Display the log output of the testagent container
      - uses: codecov/codecov-action@v2

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2      
      - name: Set hostname
        run: sudo hostnamectl set-hostname testrunner
      - run: docker-compose up -d testagent # Start the testagent container in the background
      - uses: ./.github/actions/node/setup
      - run: yarn install
      - run: yarn test:appsec:ci
      - if: success() || failure()
        run: docker-compose logs testagent # Display the log output of the testagent container
      - uses: codecov/codecov-action@v2

  ldapjs:
    runs-on: ubuntu-latest
    env:
      PLUGINS: ldapjs
    services:
      openldap:
        image: bitnami/openldap:latest
        ports:
          - '1389:1389'
          - '1636:1636'
        env:
          LDAP_ADMIN_USERNAME: 'admin'
          LDAP_ADMIN_PASSWORD: 'adminpassword'
          LDAP_USERS: 'user01,user02'
          LDAP_PASSWORDS: 'password1,password2'
    steps:
      - uses: actions/checkout@v2      
      - name: Set hostname
        run: sudo hostnamectl set-hostname testrunner
      - run: docker-compose up -d testagent # Start the testagent container in the background
      - uses: ./.github/actions/node/setup
      - run: yarn install
      - uses: ./.github/actions/node/oldest
      - run: yarn test:appsec:plugins:ci
      - uses: ./.github/actions/node/latest
      - run: yarn test:appsec:plugins:ci
      - if: success() || failure()
        run: docker-compose logs testagent # Display the log output of the testagent container
      - uses: codecov/codecov-action@v2
