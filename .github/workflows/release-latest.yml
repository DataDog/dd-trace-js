name: Release (latest)

on:
  push:
    branches:
      - v3.x

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: npm
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
      - run: npm publish
      - id: pkg
        run: |
          content=`cat ./package.json | tr '\n' ' '`
          echo "::set-output name=json::$content"
      - run: |
          git tag v${{ fromJson(steps.pkg.outputs.json).version }}
          git push origin v${{ fromJson(steps.pkg.outputs.json).version }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # 2.0.0
        with:
          install: true
          config-inline: |
            [worker.oci]
              max-parallelism = 1
      - name: Build injection image and push to github packages
        run: |
          node scripts/set-version-for-init-image.js ${{ fromJson(steps.pkg.outputs.json).version }}
          npm pack dd-trace@${{ fromJson(steps.pkg.outputs.json).version }}
          cp dd-trace-*.tgz k8s/auto-inst/dd-trace.tgz
          docker buildx create --name lib-injection
          docker buildx use lib-injection
          BUILDX_PLATFORMS=linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le
          docker buildx build --platform ${BUILDX_PLATFORMS} --build-arg npm_pkg=./dd-trace.tgz -t ghcr.io/datadog/dd-trace-js/dd-lib-js-init:${{ fromJson(steps.pkg.outputs.json).version }} --push k8s/auto-inst

  docs:
    runs-on: ubuntu-latest
    needs: ['publish']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - id: pkg
        run: |
          content=`cat ./package.json | tr '\n' ' '`
          echo "::set-output name=json::$content"
      - run: yarn
      - name: Build
        working-directory: docs
        run: |
          yarn
          yarn build
          mv out /tmp/out
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Deploy
        run: |
          rm -rf *
          mv /tmp/out/* .
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -A
          git commit -m ${{ fromJson(steps.pkg.outputs.json).version }}
          git push
