name: Prepare release proposal

on:
  workflow_dispatch:

jobs:
  create-proposal:
    strategy:
      matrix:
        base-branch:
          - v4.x
          - v5.x
    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ matrix.base-branch }}
          token: ${{ secrets.GH_ACCESS_TOKEN_RELEASE }}

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Pull master branch
        run: |
          git checkout master
          git pull
          cp -r scripts _scripts
          git checkout ${{ matrix.base-branch }}


      - name: Configure node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0

      - name: Install dependencies
        run: |
          yarn
          git checkout yarn.lock

      - name: Install branch-diff
        run: |
          npm i -g @bengl/branch-diff

      - name: Configure branch-diff
        run: |
          mkdir -p ~/.config/changelog-maker
          echo "{\"token\":\"${{secrets.GITHUB_TOKEN}}\",\"user\":\"${{github.actor}}\"}" > ~/.config/changelog-maker/config.json

      - name: Commit branch diffs
        id: commit_branch_diffs
        run: |
          node _scripts/prepare-release-proposal.js commit-branch-diffs ${{ matrix.base-branch }} > branch-diffs.txt

      - name: Calculate release type
        id: calc-release-type
        run: |
          release_type=`grep -q "(SEMVER-MINOR)" branch-diffs.txt && echo "minor" || echo "patch"`
          echo "release-type=$release_type" >> $GITHUB_OUTPUT

      - name: Create proposal branch
        id: create_branch
        run: |
          branch_name=`node _scripts/prepare-release-proposal.js create-branch ${{ steps.calc-release-type.outputs.release-type }}`
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Push proposal branch
        run: |
          git push origin ${{steps.create_branch.outputs.branch_name}}

      - name: Update package.json
        id: pkg
        run: |
          content=`node _scripts/prepare-release-proposal.js update-package-json ${{ steps.calc-release-type.outputs.release-type }}`
          echo "version=$content" >> $GITHUB_OUTPUT

      - name: Create PR
        run: |
          gh pr create --draft --base ${{ matrix.base-branch }} --title "v${{ steps.pkg.outputs.version }}" -F branch-diffs.txt
          rm branch-diffs.txt
        env:
          GH_TOKEN: ${{ github.token }}

      # Commit package.json and push to proposal branch after the PR is created to force CI execution
      - name: Commit package.json
        run: |
          git add package.json
          git commit -m "v${{ steps.pkg.outputs.version }}"

      - name: Push package.json update
        run: |
          git push origin ${{steps.create_branch.outputs.branch_name}}

      - name: Clean _scripts
        run: |
          rm -rf _scripts
