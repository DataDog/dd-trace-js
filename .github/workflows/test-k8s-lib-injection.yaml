name: "Lib Injection Test"

on:
  pull_request:
  push:
    branches: [master]
  schedule:
    - cron: '0 4 * * *'

jobs:
  lib-injection-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4

      - name: Log in to the Container registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@d08cf6ff1575077dee99962540d77ce91c62387d # 1.3.0
        with:
          config: k8s/kind-config.yaml
          kubectl_version: v1.22.10
          node_image: kindest/node:v1.22.9

      - name: Deploy apm test trace agent
        run: |
          kubectl apply -f k8s/dd-apm-test-agent-config.yaml
          kubectl rollout status daemonset/datadog-agent
          kubectl wait $(kubectl get pods -l app=datadog-agent -o name) --for condition=ready
          sleep 5

      - name: Npm pack for injection image
        run: |
          npm pack

      - uses: .github/actions/injection
        with:
          init-image-version: ${GITHUB_SHA}

      - name: Build sample app image
        run: |
          docker build k8s/sample-app --build-arg npm_pkg=./dd-trace.tgz -t ghcr.io/datadog/dd-trace-js/sample-app:${GITHUB_SHA}
          docker push ghcr.io/datadog/dd-trace-js/sample-app:${GITHUB_SHA}

      - name: Deploy test pod
        run: |
          sed -i "s|LATEST|$GITHUB_SHA|g" k8s/test-pod.yaml
          sleep 5
          n=0
          until [ "$n" -ge 5 ]
          do
            kubectl apply -f k8s/test-pod.yaml && sleep 5 && kubectl wait pod/sample-app --for condition=ready && break
            n=$((n+1))
            sleep 15
          done
          sleep 5

      - name: Test
        run: |
          wget http://localhost:18126/test/session/traces || true
          kubectl logs $(kubectl get pods -l app=datadog-agent -o name)

          TRACES=`cat traces`
          if [[ ${#TRACES} -lt 3 ]] ; then
            echo "No traces reported - ${TRACES}"
            exit 1
          else
            echo "Traces reported - ${TRACES}"
            exit 0
          fi
