{
  "MESSAGE_SCHEMA_DEF":{
     "openapi":"3.0.0",
     "components":{
        "schemas":{
           "MyMessage":{
              "type":"object",
              "properties":{
                 "id":{
                    "type":"string"
                 },
                 "value":{
                    "type":"string"
                 },
                 "otherMessage":{
                    "type":"array",
                    "items":{
                       "type":"object",
                       "$ref":"#/components/schemas/OtherMessage"
                    }
                 },
                 "status":{
                    "type":"enum",
                    "enum":[
                       "UNKNOWN",
                       "ACTIVE",
                       "INACTIVE",
                       "DELETED"
                    ]
                 }
              }
           },
           "OtherMessage":{
              "type":"object",
              "properties":{
                 "name":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                 },
                 "age":{
                    "type":"integer",
                    "format":"int32"
                 }
              }
           }
        }
     }
  },
  "OTHER_MESSAGE_SCHEMA_DEF":{
     "openapi":"3.0.0",
     "components":{
        "schemas":{
           "OtherMessage":{
              "type":"object",
              "properties":{
                 "name":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                 },
                 "age":{
                    "type":"integer",
                    "format":"int32"
                 }
              }
           }
        }
     }
  },
  "ALL_TYPES_MESSAGE_SCHEMA_DEF":{
     "openapi":"3.0.0",
     "components":{
        "schemas":{
           "example.MainMessage":{
              "type":"object",
              "properties":{
                 "status":{
                    "type":"enum",
                    "enum":[
                       "UNKNOWN",
                       "ACTIVE",
                       "INACTIVE"
                    ]
                 },
                 "scalars":{
                    "type":"object",
                    "$ref":"#/components/schemas/example.Scalars"
                 },
                 "nested":{
                    "type":"object",
                    "$ref":"#/components/schemas/example.NestedMessage"
                 },
                 "complex":{
                    "type":"object",
                    "$ref":"#/components/schemas/example.ComplexMessage"
                 }
              }
           },
           "example.Scalars":{
              "type":"object",
              "properties":{
                 "int32Field":{
                    "type":"integer",
                    "format":"int32"
                 },
                 "int64Field":{
                    "type":"integer",
                    "format":"int64"
                 },
                 "uint32Field":{
                    "type":"integer",
                    "format":"uint32"
                 },
                 "uint64Field":{
                    "type":"integer",
                    "format":"uint64"
                 },
                 "sint32Field":{
                    "type":"integer",
                    "format":"sint32"
                 },
                 "sint64Field":{
                    "type":"integer",
                    "format":"sint64"
                 },
                 "fixed32Field":{
                    "type":"integer",
                    "format":"fixed32"
                 },
                 "fixed64Field":{
                    "type":"integer",
                    "format":"fixed64"
                 },
                 "sfixed32Field":{
                    "type":"integer",
                    "format":"sfixed32"
                 },
                 "sfixed64Field":{
                    "type":"integer",
                    "format":"sfixed64"
                 },
                 "floatField":{
                    "type":"number",
                    "format":"float"
                 },
                 "doubleField":{
                    "type":"number",
                    "format":"double"
                 },
                 "boolField":{
                    "type":"boolean"
                 },
                 "stringField":{
                    "type":"string"
                 },
                 "bytesField":{
                    "type":"string",
                    "format":"byte"
                 }
              }
           },
           "example.NestedMessage":{
              "type":"object",
              "properties":{
                 "id":{
                    "type":"string"
                 },
                 "scalars":{
                    "type":"object",
                    "$ref":"#/components/schemas/example.Scalars"
                 }
              }
           },
           "example.ComplexMessage":{
              "type":"object",
              "properties":{
                 "repeatedField":{
                    "type":"array",
                    "items":{
                       "type":"string"
                    }
                 },
                 "mapField":{
                    "type":"object",
                    "$ref":"#/components/schemas/example.Scalars"
                 }
              }
           }
        }
     }
  }
}