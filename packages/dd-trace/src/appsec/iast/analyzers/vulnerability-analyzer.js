'use strict'

const Plugin = require('../../../../src/plugins/plugin')
const { getFirstNonDDPathAndLine } = require('./../path-line')
const { createVulnerability, addVulnerability } = require('../vulnerability-reporter')
// const overheadController = require('../overhead-controller')

class Analyzer extends Plugin {

  constructor (type) {
    super()
    this._type = type
  }

  _isVulnerable (value, context) {
    return false
  }

  _report (value, context) {
    const evidence = this._getEvidence(value)
    const location = this._getLocation()
    const vulnerability = createVulnerability(this._type, evidence, context.rootSpan.context().toSpanId(), location)
    addVulnerability(context, vulnerability)
  }

  _getEvidence (value) {
    return {
      value,
      ranges: null
    }
  }

  _getLocation () {
    return getFirstNonDDPathAndLine()
  }

  analyze (value, context) {
    if (this._checkOCE(context) && this._isVulnerable(value, context)) {
      this._report(value, context)
    }
  }

  _checkOCE (context) {
    // return overheadController.hasQuota(overheadController.OPERATIONS.REPORT_VULNERABILITY, context)
    return true
  }
}

module.exports = Analyzer
