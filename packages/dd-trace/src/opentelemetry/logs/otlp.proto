syntax = "proto3";

package opentelemetry.proto.collector.logs.v1;

import "opentelemetry/proto/logs/v1/logs.proto";

option go_package = "go.opentelemetry.io/collector/pdata/plog/plogotlp";

// Service that can be used to push logs between one Application instrumented with
// OpenTelemetry and an collector, or between a collector and a central collector.
service LogsService {
  // For performance reasons, it is recommended to keep this RPC
  // alive for the entire life of the application.
  rpc Export(ExportLogsServiceRequest) returns (ExportLogsServiceResponse);
}

message ExportLogsServiceRequest {
  // An array of ResourceLogs.
  // For data coming from a single resource this array will typically contain
  // one element. Intermediary nodes that receive data from multiple origins
  // and batch this data before sending further, will send data from multiple
  // resources in a single request.
  repeated opentelemetry.proto.logs.v1.ResourceLogs resource_logs = 1;
}

message ExportLogsServiceResponse {
  // The details of a partially successful export request.
  //
  // If the request is only partially accepted
  // (i.e. when the server accepts only parts of the data and rejects the rest)
  // the server MUST initialize the `partial_success` field and MUST
  // set the `rejected_*` fields accordingly.
  //
  // If the request is fully accepted, the server MUST NOT initialize the
  // `partial_success` field.
  ExportLogsPartialSuccess partial_success = 1;
}

message ExportLogsPartialSuccess {
  // The number of rejected log records.
  //
  // A `rejected_<signal>` field holding a `0` value indicates that the
  // request was fully accepted.
  int64 rejected_log_records = 1;

  // A developer-facing human-readable message in English. It should be used
  // either to explain why the server rejected parts of the data during a partial
  // success or to convey failure/warning information when the request was fully
  // accepted. A message should be concise and should not exceed 255 characters.
  string error_message = 2;
}
