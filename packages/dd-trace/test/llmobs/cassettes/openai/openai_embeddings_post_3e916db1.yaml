interactions:
- request:
    body: "{\n  \"model\": \"text-embedding-ada-002\",\n  \"input\": \"The powerhouse
      of the cell is the mitochondria\",\n  \"encoding_format\": \"base64\"\n}"
    headers:
      ? !!python/object/apply:multidict._multidict.istr
      - Accept
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - Accept-Encoding
      : - gzip,deflate
      ? !!python/object/apply:multidict._multidict.istr
      - Connection
      : - keep-alive
      Content-Length:
      - '131'
      ? !!python/object/apply:multidict._multidict.istr
      - Content-Type
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - User-Agent
      : - OpenAI/JS 4.104.0
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-arch
      : - arm64
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-lang
      : - js
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-os
      : - MacOS
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-package-version
      : - 4.104.0
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-retry-count
      : - '0'
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-runtime
      : - node
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-runtime-version
      : - v22.17.0
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-timeout
      : - '600'
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-ada-002-v2\",\n  \"usage\": {\n
        \   \"prompt_tokens\": 9,\n    \"total_tokens\": 9\n  }\n}\n"
    headers:
      CF-RAY:
      - 96b7b7f4f864b49c-IAD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 07 Aug 2025 15:13:33 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=RAWyOHswb5nmEcdEQvVVBPPN2sf9fB99hmRUoGQB7XI-1754579613-1.0.1.1-PSIKBTOIHR0eYvRFUXyKIE6nFJkow9npk1gD3qhTHT_TeoF7iiwAjmFnLtdUVd375VTRpF48s4JgA.Zwftr.fmTkLK2IDgAObf2JxQNGQAk;
        path=/; expires=Thu, 07-Aug-25 15:43:33 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=ZLWrfKGe_29bz1h73la1kOltd5YsB27vL4iw7Apzt5U-1754579613079-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-ada-002-v2
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '41'
      openai-project:
      - proj_gt6TQZPRbZfoY2J9AQlEJMpd
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-769c5f49f9-zttk8
      x-envoy-upstream-service-time:
      - '68'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999989'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_1fc1af57739c45858786091b2ea1738a
    status:
      code: 200
      message: OK
version: 1
