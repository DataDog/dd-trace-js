interactions:
- request:
    body: "{\n  \"model\": \"text-embedding-ada-002\",\n  \"input\": \"Biology\",\n
      \ \"encoding_format\": \"base64\"\n}"
    headers:
      ? !!python/object/apply:multidict._multidict.istr
      - Accept
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - Accept-Encoding
      : - gzip,deflate
      ? !!python/object/apply:multidict._multidict.istr
      - Connection
      : - keep-alive
      Content-Length:
      - '92'
      ? !!python/object/apply:multidict._multidict.istr
      - Content-Type
      : - application/json
      ? !!python/object/apply:multidict._multidict.istr
      - User-Agent
      : - OpenAI/JS 4.104.0
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-arch
      : - arm64
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-lang
      : - js
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-os
      : - MacOS
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-package-version
      : - 4.104.0
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-retry-count
      : - '0'
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-runtime
      : - node
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-runtime-version
      : - v22.17.0
      ? !!python/object/apply:multidict._multidict.istr
      - x-stainless-timeout
      : - '600'
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-ada-002-v2\",\n  \"usage\": {\n
        \   \"prompt_tokens\": 2,\n    \"total_tokens\": 2\n  }\n}\n"
    headers:
      CF-RAY:
      - 96b7ed068c54d6a7-IAD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 07 Aug 2025 15:49:47 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=4sRf9TBZIr23wndzX7dzITOQj2K470Ypr69OPecYQPY-1754581787-1.0.1.1-F1MBBXsY3ZyCIHlNheQ9KG95KewYvzyGPXPo3I2IpKZiIh1bdlzoZVngP9a57KcnwmsHpCT.ziPe3Om3pBDdxyMDgMxtVROPfrbqndnaArk;
        path=/; expires=Thu, 07-Aug-25 16:19:47 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=aWHNmwc1zuZOepHMV3lDL1Nwaqwk0K4HFrXc.sBXmfE-1754581787097-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-ada-002-v2
      openai-organization:
      - datadog-staging
      openai-processing-ms:
      - '178'
      openai-project:
      - proj_gt6TQZPRbZfoY2J9AQlEJMpd
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-554fbdff69-sbmfx
      x-envoy-upstream-service-time:
      - '377'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999999'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_a6ed6f8573da4bf58f880244c3a5ef55
    status:
      code: 200
      message: OK
version: 1
